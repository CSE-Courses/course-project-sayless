# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestAvi():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_avi(self):
    # Test name: avi
    # Step # | name | target | value
    # 1 | open | /login | 
    self.driver.get("http://sayless.azurewebsites.net/login")
    # 2 | setWindowSize | 1552x840 | 
    self.driver.set_window_size(1552, 840)
    # 3 | click | id=emailInput | 
    self.driver.find_element(By.ID, "emailInput").click()
    # 4 | type | id=emailInput | jshrishty18@gmail.com
    self.driver.find_element(By.ID, "emailInput").send_keys("jshrishty18@gmail.com")
    # 5 | click | css=.form | 
    self.driver.find_element(By.CSS_SELECTOR, ".form").click()
    # 6 | click | id=passwordInput | 
    self.driver.find_element(By.ID, "passwordInput").click()
    # 7 | type | id=passwordInput | Newpassword1234
    self.driver.find_element(By.ID, "passwordInput").send_keys("Newpassword1234")
    # 8 | click | css=.btn1 | 
    self.driver.find_element(By.CSS_SELECTOR, ".btn1").click()
    # 9 | click | css=.fa-cog | 
    self.driver.find_element(By.CSS_SELECTOR, ".fa-cog").click()
    # 10 | click | linkText=Edit | 
    self.driver.find_element(By.LINK_TEXT, "Edit").click()
    # 11 | verifyTitle | Update AVI | 
    assert self.driver.title == "Update AVI"
    # 12 | verifyText | css=h2 | Click on the "Choose File" button to upload a picture:
    assert self.driver.find_element(By.CSS_SELECTOR, "h2").text == "Click on the \\\"Choose File\\\" button to upload a picture:"
    # 13 | mouseDownAt | id=myFile | 56,20.29998779296875
    element = self.driver.find_element(By.ID, "myFile")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    # 14 | mouseMoveAt | id=myFile | 56,20.29998779296875
    element = self.driver.find_element(By.ID, "myFile")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    # 15 | mouseUpAt | id=myFile | 56,20.29998779296875
    element = self.driver.find_element(By.ID, "myFile")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    # 16 | click | id=myFile | 
    self.driver.find_element(By.ID, "myFile").click()
    # 17 | click | css=.vsc-initialized | 
    self.driver.find_element(By.CSS_SELECTOR, ".vsc-initialized").click()
    # 18 | click | id=submit | 
    self.driver.find_element(By.ID, "submit").click()
    # 19 | close |  | 
    self.driver.close()
  
