# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestNewmessage():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_newmessage(self):
    # Test name: new_message
    # Step # | name | target | value | comment
    # 1 | open | /login |  | 
    self.driver.get("http://sayless.azurewebsites.net/login")
    # 2 | setWindowSize | 1552x840 |  | 
    self.driver.set_window_size(1552, 840)
    # 3 | click | id=emailInput |  | 
    self.driver.find_element(By.ID, "emailInput").click()
    # 4 | type | id=emailInput | test@gmail.com | 
    self.driver.find_element(By.ID, "emailInput").send_keys("test@gmail.com")
    # 5 | type | id=passwordInput | password123 | 
    self.driver.find_element(By.ID, "passwordInput").send_keys("password123")
    # 6 | sendKeys | id=passwordInput | ${KEY_ENTER} | 
    self.driver.find_element(By.ID, "passwordInput").send_keys(Keys.ENTER)
    WebDriverWait(self.driver, 30000).until(expected_conditions.presence_of_element_located((By.ID, "openchat")))
    # 7 | click | id=45605af62c5c1a6ab3a3001757a610e218153f3ec3385bbbd613d995bee90966 |  | 
    self.driver.find_element(By.ID, "45605af62c5c1a6ab3a3001757a610e218153f3ec3385bbbd613d995bee90966").click()
    # 8 | selectFrame | index=0 |  | 
    self.driver.switch_to.frame(0)
    # 9 | click | css=.emoji-wysiwyg-editor |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".emoji-wysiwyg-editor").click()
    # 10 | editContent | css=.emoji-wysiwyg-editor | testing new message | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".emoji-wysiwyg-editor")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = 'testing new message'}", element)
    # 11 | click | id=send |  | 
    self.driver.find_element(By.ID, "send").click()
    # 12 | click | css=.emoji-wysiwyg-editor |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".emoji-wysiwyg-editor").click()
    # 13 | editContent | css=.emoji-wysiwyg-editor | testing new message 2 | 
    element = self.driver.find_element(By.CSS_SELECTOR, ".emoji-wysiwyg-editor")
    self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerText = 'testing new message 2'}", element)
    # 14 | click | id=send |  | 
    self.driver.find_element(By.ID, "send").click()
    # 15 | selectFrame | relative=parent |  | 
    self.driver.switch_to.default_content()
    # 16 | click | css=.fa-sign-out-alt |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".fa-sign-out-alt").click()
    # 17 | click | id=emailInput |  | 
    self.driver.find_element(By.ID, "emailInput").click()
    # 18 | type | id=emailInput | test2@gmail.com | 
    self.driver.find_element(By.ID, "emailInput").send_keys("test2@gmail.com")
    # 19 | type | id=passwordInput | password123 | 
    self.driver.find_element(By.ID, "passwordInput").send_keys("password123")
    # 20 | sendKeys | id=passwordInput | ${KEY_ENTER} | 
    self.driver.find_element(By.ID, "passwordInput").send_keys(Keys.ENTER)
    # 21 | verifyText | css=#\34 5605af62c5c1a6ab3a3001757a610e218153f3ec3385bbbd613d995bee90966 > #num_message | 2 | 
    WebDriverWait(self.driver, 30000).until(expected_conditions.presence_of_element_located((By.ID, "openchat")))
    assert self.driver.find_element(By.CSS_SELECTOR, "#\\34 5605af62c5c1a6ab3a3001757a610e218153f3ec3385bbbd613d995bee90966 > #num_message").text == "2"
    # 22 | click | id=45605af62c5c1a6ab3a3001757a610e218153f3ec3385bbbd613d995bee90966 |  | 
    self.driver.find_element(By.ID, "45605af62c5c1a6ab3a3001757a610e218153f3ec3385bbbd613d995bee90966").click()
    # 23 | click | css=.ochat |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".ochat").click()
    # 24 | click | css=.fa-sign-out-alt |  | 
    self.driver.find_element(By.CSS_SELECTOR, ".fa-sign-out-alt").click()
    # 25 | close |  |  | 
    self.driver.close()
  
