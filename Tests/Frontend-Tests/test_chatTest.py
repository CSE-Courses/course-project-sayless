# Generated by Selenium IDE
import pytest
import time
import json
import random
import string
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


class TestChatTest():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_chatTest(self):
    self.driver.get("http://sayless.azurewebsites.net/login")
    self.driver.set_window_size(1552, 840)
    self.driver.find_element(By.ID, "emailInput").click()
    self.driver.find_element(By.ID, "emailInput").send_keys("test@gmail.com")
    self.driver.find_element(By.ID, "passwordInput").send_keys("password123")
    self.driver.find_element(By.CSS_SELECTOR, ".btn1").click()
    WebDriverWait(self.driver, 30000).until(expected_conditions.presence_of_element_located((By.ID, "autocomplete-3")))
    self.driver.find_element(By.ID, "autocomplete-3").click()
    self.driver.find_element(By.ID, "autocomplete-3").send_keys("Shazmaan")
    self.driver.find_element(By.ID, "chat").click()
    WebDriverWait(self.driver, 30000).until(expected_conditions.presence_of_element_located((By.ID, "send")))
    assert self.driver.title == "Flask_Chat_App"
    elements = self.driver.find_elements(By.ID, "header")
    assert len(elements) > 0
    assert self.driver.find_element(By.ID, "header").text == "rileybur"
    element = self.driver.find_element(By.CSS_SELECTOR, ".message")
    assert element.is_enabled() is True
    random_string = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))
    self.driver.find_element(By.CLASS_NAME, "message").send_keys(random_string)
    assert self.driver.find_element(By.ID, "send").text == "Send"
    self.driver.find_element(By.ID, "send").click()
    #Note This is repeated code, however it is needed to see chat changes because of
    #How webdriver attempts to connect to sites
    #Without this the assertion for finding the chat message fails
    self.driver.refresh()
    self.driver.get("http://sayless.azurewebsites.net/login")
    self.driver.find_element(By.ID, "emailInput").click()
    self.driver.find_element(By.ID, "emailInput").send_keys("test@gmail.com")
    self.driver.find_element(By.ID, "passwordInput").send_keys("password123")
    self.driver.find_element(By.CSS_SELECTOR, ".btn1").click()
    WebDriverWait(self.driver, 30000).until(expected_conditions.presence_of_element_located((By.ID, "autocomplete-3")))
    self.driver.find_element(By.ID, "autocomplete-3").click()
    self.driver.find_element(By.ID, "autocomplete-3").send_keys("Shazmaan")
    self.driver.find_element(By.ID, "chat").click()
    WebDriverWait(self.driver, 30000).until(expected_conditions.presence_of_element_located((By.ID, "send")))
    chat = self.driver.find_element_by_id("chat").text
    self.driver.get("http://sayless.azurewebsites.net/login")
    self.driver.find_element(By.ID, "emailInput").click()
    self.driver.find_element(By.ID, "emailInput").send_keys("shazmaanmalek@gmail.com")
    self.driver.find_element(By.ID, "passwordInput").send_keys("hello123")
    self.driver.find_element(By.CSS_SELECTOR, ".btn1").click()
    WebDriverWait(self.driver, 30000).until(expected_conditions.presence_of_element_located((By.ID, "autocomplete-3")))
    self.driver.find_element(By.ID, "autocomplete-3").click()
    self.driver.find_element(By.ID, "autocomplete-3").send_keys("rileybur")
    self.driver.find_element(By.ID, "chat").click()
    WebDriverWait(self.driver, 30000).until(expected_conditions.presence_of_element_located((By.ID, "send")))
    chat2 = self.driver.find_element_by_id("chat").text
    
    #Assert that the random string is found in the message area
    assert random_string in chat, "message not sent into chat"
    assert random_string in chat2, "message not received into chat"

  
    self.driver.close()
  
